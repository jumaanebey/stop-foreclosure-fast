{
  "name": "Foreclosure Leads - Daily Summary Report",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * *"
            }
          ]
        }
      },
      "id": "a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d",
      "name": "Schedule: Daily at 8 AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "documentId": {
          "__rl": true,
          "value": "1GrfyUDVS_Z66X80kVrXSGRHnbV1XOPp06uxF8lmbbiw",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "NOD Leads"
        },
        "options": {}
      },
      "id": "b2c3d4e5-f6a7-8b9c-0d1e-2f3a4b5c6d7e",
      "name": "Get All Leads",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [460, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_CREDENTIAL_ID",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Calculate today and yesterday dates\nconst today = new Date();\nconst yesterday = new Date(today);\nyesterday.setDate(yesterday.getDate() - 1);\n\nconst todayStr = today.toISOString().split('T')[0];\nconst yesterdayStr = yesterday.toISOString().split('T')[0];\n\n// Filter leads\nconst newLeads = items.filter(item => {\n  const dateFound = item.json['Date Found'];\n  return dateFound && dateFound.includes(yesterdayStr);\n});\n\nconst followupsToday = items.filter(item => {\n  const followupDate = item.json['Next Follow-up Date'];\n  return followupDate && followupDate.includes(todayStr);\n});\n\nconst appointmentsToday = items.filter(item => {\n  const status = item.json['Status'] || '';\n  const followupDate = item.json['Next Follow-up Date'];\n  return status.toLowerCase().includes('appointment') && \n         followupDate && followupDate.includes(todayStr);\n});\n\nconst totalLeads = items.length;\nconst contacted = items.filter(item => {\n  const status = item.json['Status'] || '';\n  return status.toLowerCase().includes('contacted') || \n         status.toLowerCase().includes('appointment');\n}).length;\n\nconst newLeadsList = newLeads.map(item => \n  `• ${item.json['Owner Name']} - ${item.json['Property Address']} (${item.json['Phone Number'] || 'No phone'})`\n).join('\\n');\n\nconst followupsList = followupsToday.map(item =>\n  `• ${item.json['Owner Name']} - ${item.json['Phone Number']} - ${item.json['Status']}`\n).join('\\n');\n\nconst appointmentsList = appointmentsToday.map(item =>\n  `• ${item.json['Owner Name']} - ${item.json['Phone Number']} at ${item.json['Next Follow-up Date']}`\n).join('\\n');\n\nreturn [\n  {\n    json: {\n      date: todayStr,\n      stats: {\n        newLeadsCount: newLeads.length,\n        followupsCount: followupsToday.length,\n        appointmentsCount: appointmentsToday.length,\n        totalLeads: totalLeads,\n        contactedCount: contacted,\n        contactRate: totalLeads > 0 ? Math.round((contacted / totalLeads) * 100) : 0\n      },\n      lists: {\n        newLeads: newLeadsList || 'None',\n        followups: followupsList || 'None',\n        appointments: appointmentsList || 'None'\n      }\n    }\n  }\n];"
      },
      "id": "c3d4e5f6-a7b8-9c0d-1e2f-3a4b5c6d7e8f",
      "name": "Calculate Daily Stats",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "fromEmail": "help@myforeclosuresolution.com",
        "toEmail": "help@myforeclosuresolution.com",
        "subject": "📊 Daily Lead Report - {{ $json.date }}",
        "emailType": "text",
        "message": "Good morning!\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📊 DAILY SUMMARY - {{ $json.date }}\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n🆕 New Leads Yesterday: {{ $json.stats.newLeadsCount }}\n📞 Follow-ups Needed Today: {{ $json.stats.followupsCount }}\n📅 Appointments Today: {{ $json.stats.appointmentsCount }}\n\n📈 Overall Stats:\n   • Total Leads in Pipeline: {{ $json.stats.totalLeads }}\n   • Contacted: {{ $json.stats.contactedCount }}\n   • Contact Rate: {{ $json.stats.contactRate }}%\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n🆕 NEW LEADS FROM YESTERDAY:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n{{ $json.lists.newLeads }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📞 FOLLOW-UPS NEEDED TODAY:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n{{ $json.lists.followups }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📅 APPOINTMENTS TODAY:\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n{{ $json.lists.appointments }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n💪 ACTION ITEMS FOR TODAY:\n\n1. Call all follow-ups listed above\n2. Confirm today's appointments  \n3. Reach out to new leads\n4. Log all call results in the tracking sheet\n\nGo get 'em! 🚀\n\nMy Foreclosure Solution\nCA DRE #02076038",
        "options": {}
      },
      "id": "d4e5f6a7-b8c9-0d1e-2f3a-4b5c6d7e8f9a",
      "name": "Send Daily Email Report",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [900, 300],
      "credentials": {
        "smtp": {
          "id": "YOUR_SMTP_CREDENTIAL_ID",
          "name": "Gmail SMTP"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule: Daily at 8 AM": {
      "main": [
        [
          {
            "node": "Get All Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Leads": {
      "main": [
        [
          {
            "node": "Calculate Daily Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Daily Stats": {
      "main": [
        [
          {
            "node": "Send Daily Email Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "2",
  "meta": {
    "instanceId": "your-instance-id"
  },
  "tags": []
}
